name: "Secure artifact download"
description: "Download an artifact and verify its SHA256"
inputs:
  name:
    description: "Artifact name. (Note: this is a name given to an upload, not the path or filename)."
    required: true
  path:
    description: "The path of the artifact. (Note: should be the same as the `path` argument passed to secure-upload-artifact or actions/upload-artifact GHA)."
    required: true
  sha256:
    description: "SHA256 of the file for verification."
    required: true
  set-executable:
    description: "Set the artifact as executable."
    required: false

runs:
  using: "composite"
  steps:
    - name: Validate the artifact path
      id: validate-path
      shell: bash
      env:
        UNTRUSTED_PATH: "${{ inputs.path }}"
      run: |
        set -euo pipefail

        # Ensure no directory traversal.
        # NOTE: the actions/download-artifact Action only creates files
        # in the workspace directory, but this may change in the future.
        resolved_dir=$(readlink -m "$UNTRUSTED_PATH")
        wd=$(readlink -m "$PWD")
        if [[ "$resolved_dir" != "$wd"/* ]] && [[ "$resolved_dir" != "$wd" ]]; then
          echo "Path is not in the current directory: $UNTRUSTED_PATH"
          exit 1
        fi

        # Check that the name of the path does not clash with the
        # directory where the builder code is stored.
        results=$(
          echo "$UNTRUSTED_PATH" | grep __BUILDER_CHECKOUT_DIR__ || true
        )
        if [[ "$results" != "" ]]; then
          echo "\"$UNTRUSTED_PATH\" contains '__BUILDER_CHECKOUT_DIR__'"
          echo "$results"
          exit 1
        fi

        # Ensure we don't overwrite existing files.
        if [ -e "$UNTRUSTED_PATH" ]; then
          echo "Path $UNTRUSTED_PATH already exists"
          exit 5
        fi

        # path has been validated. Explicitly trust it and set as an output.
        trusted_path="${UNTRUSTED_PATH}"
        echo "path=${trusted_path}" >> "${GITHUB_OUTPUT}"

    - name: Download the artifact
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: "${{ inputs.name }}"
        path: "${{ steps.validate-path.outputs.trusted_path }}"

    - name: Compute the hash
      id: compute
      uses: slsa-framework/slsa-github-generator/.github/actions/compute-sha256@main
      with:
        path: "${{ steps.validate-path.outputs.trusted_path }}"

    # Note: this assumes to top-level re-usable workflow
    # has checkout'ed the builder repository using
    # `.github/actions/secure-builder-checkout`.
    - name: Verify the SHA256
      env:
        UNTRUSTED_EXPECTED_HASH: "${{ inputs.sha256 }}"
        UNTRUSTED_COMPUTED_HASH: "${{ steps.compute.outputs.sha256 }}"
        TRUSTED_PATH: "${{ steps.validate-path.outputs.trusted_path }}"
        SET_EXECUTABLE: "${{ inputs.set-executable }}"
      shell: bash
      run: |
        set -euo pipefail

        if ! [[ -f "$TRUSTED_PATH" ]]; then
          echo "File $TRUSTED_PATH not present"
          exit 5
        fi

        echo "expected hash is $UNTRUSTED_EXPECTED_HASH"
        echo "computed hash is $UNTRUSTED_COMPUTED_HASH"
        if [[ "$UNTRUSTED_COMPUTED_HASH" != "$UNTRUSTED_EXPECTED_HASH" ]]; then
          echo "hashes do not match"
          exit -2
        fi
        echo "hashes match"
        if [[ "$SET_EXECUTABLE" == "true" ]]; then
          echo "Setting $TRUSTED_PATH as executable"
          chmod u+x "$TRUSTED_PATH"
        fi
