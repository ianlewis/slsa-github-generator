name: SLSA Node.js builder

permissions: {}

on:
  workflow_call:
    inputs:
      directory:
        description: "Sub-directory where package.json is located. Must be under the workspace."
        required: false
        type: string
        default: "."

      node-version:
        description: "Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0."
        required: false
        type: string

      node-version-file:
        description: "File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions."
        required: false
        type: string

      # NOTE: the additional inputs below are to support additional
      # functionality of the workflow.
      rekor-log-public:
        description: "Allow publication of your repository name on the public Rekor log"
        required: false
        type: boolean
        default: false

      run-scripts:
        description: "An ordered list of scripts from the package.json file to run (comma separated). Example value: 'script1, script2'"
        required: false
        type: string

    secrets:
      node-auth-token:
        description: "The npm registry auth token used to publish the package."
        required: true

    outputs:
      package-download-name:
        description: "The name of the package artifact uploaded to the workflow run."
        value: ${{ fromJSON(jobs.slsa-run.outputs.build-artifacts-outputs).package-download-name }}

      package-file-name:
        description: "The file name of the package tarball uploaded as an artifact."
        value: ${{ fromJSON(jobs.slsa-run.outputs.build-artifacts-outputs).package-filename }}

      provenance-download-name:
        description: "The name of the provenance attestation uploaded to the workflow run."
        value: ${{ jobs.slsa-run.outputs.attestations-download-name }}

      provenance-file-name:
        description: "The file name of the provenance attestation uploaded as an artifact."
        value: ${{ fromJSON(jobs.slsa-run.outputs.build-artifacts-outputs).attestation-name }}

jobs:
  slsa-setup:
    permissions:
      id-token: write # For token creation.
    outputs:
      slsa-token: ${{ steps.generate.outputs.slsa-token }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate the token
        id: generate
        uses: slsa-framework/slsa-github-generator/actions/delegator/setup-token@main
        with:
          slsa-workflow-recipient: "delegator_generic_slsa3.yml"
          slsa-rekor-log-public: ${{ inputs.rekor-log-public }}
          slsa-runner-label: "ubuntu-latest"
          slsa-build-action-path: "./internal/nodejs-action"
          slsa-version: "v0.2"
          # TODO(#1575): mask sensitive fields.
          slsa-workflow-inputs: ${{ toJson(inputs) }}

  slsa-run:
    needs: [slsa-setup]
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      packages: write # For publishing to GitHub packages.
    uses: slsa-framework/slsa-github-generator/.github/workflows/delegator_generic_slsa3.yml@main
    with:
      slsa-token: ${{ needs.slsa-setup.outputs.slsa-token }}
